name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate Prisma Client
        run: npm run db:generate
        
      - name: Run linting
        run: npm run lint
        
      - name: Run unit tests
        run: npm test
        
      - name: Run integration tests
        run: npm run test:integration
        env:
          NODE_ENV: test
          DATABASE_URL: "file:./test.db"
          JWT_SECRET: "test-secret"
          
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage/lcov.info
          flags: backend
          
  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
      - name: Run unit tests
        run: npm test
        
      - name: Build frontend
        run: npm run build
        
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./frontend/coverage/lcov.info
          flags: frontend
          
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install backend dependencies
        run: npm ci
        working-directory: ./backend
        
      - name: Install frontend dependencies
        run: npm ci
        working-directory: ./frontend
        
      - name: Generate Prisma Client
        run: npm run db:generate
        working-directory: ./backend
        
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        working-directory: ./frontend
        
      - name: Start backend server
        run: |
          npm run db:push
          npm start &
        working-directory: ./backend
        env:
          NODE_ENV: test
          DATABASE_URL: "file:./test.db"
          PORT: 3001
          JWT_SECRET: "test-secret"
          
      - name: Build and start frontend
        run: |
          npm run build
          npm run preview &
        working-directory: ./frontend
        env:
          VITE_API_URL: http://localhost:3001
          
      - name: Wait for servers
        run: |
          timeout 30 bash -c 'until curl -f http://localhost:3001/health; do sleep 1; done'
          timeout 30 bash -c 'until curl -f http://localhost:4173; do sleep 1; done'
          
      - name: Run Playwright tests
        run: npm run test:e2e
        working-directory: ./frontend
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:4173
          
      - name: Upload Playwright Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30
          
  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install backend dependencies
        run: npm ci
        working-directory: ./backend
        
      - name: Install frontend dependencies
        run: npm ci
        working-directory: ./frontend
        
      - name: Generate Prisma Client
        run: npm run db:generate
        working-directory: ./backend
        
      - name: Build frontend
        run: npm run build
        working-directory: ./frontend
        
      - name: Test backend startup
        run: timeout 10 npm start
        working-directory: ./backend
        env:
          NODE_ENV: test
          DATABASE_URL: "file:./test.db"
          PORT: 3001