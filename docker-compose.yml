version: '3.8'

services:
  # Frontend Development
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
      - "5174:5174" # Admin Port
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:3001/api
      - VITE_APP_ENV=development
      - VITE_ENABLE_LLM_ADVISOR=true
      - VITE_ENABLE_AUDIO_GUIDES=true
    depends_on:
      - backend
    networks:
      - app-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - uploads:/app/uploads
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/humanoid_configurator
      - JWT_SECRET=dev-super-secret-jwt-key-for-development
      - JWT_EXPIRES_IN=7d
      - CORS_ORIGIN=http://localhost:5173
      - UPLOAD_DIR=/app/uploads
      - MAX_FILE_SIZE=10485760
      - SMTP_HOST=localhost
      - SMTP_PORT=1025
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=humanoid_configurator
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/migrations:/docker-entrypoint-initdb.d
    networks:
      - app-network
    restart: unless-stopped

  # Redis for Caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped

  # MailHog for Development Email Testing
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - app-network

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  uploads:

networks:
  app-network:
    driver: bridge